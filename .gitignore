# Attention-Based Automatic Modulation Recognition
# .gitignore for Python ML project with PyTorch

# =============================================================================
# EXCLUDE ALL SUBFOLDERS AND DIRECTORIES
# =============================================================================
# This ensures only the 3 main script files are tracked
*/
**/

# =============================================================================
# PYTHON
# =============================================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# =============================================================================
# MACHINE LEARNING & DATA SCIENCE
# =============================================================================
# PyTorch
*.pth
*.pt
checkpoints/
lightning_logs/

# TensorFlow
*.pb
saved_model/
*.tfevents.*

# Model files and weights
models/
saved_models/
weights/
*.h5
*.hdf5
*.pkl
*.pickle

# Training outputs and results
runs/
experiments/
experiment_results/
results/
outputs/
logs/
tensorboard_logs/

# Dataset files (large files should use Git LFS)
data/
datasets/
*.csv
*.tsv
*.json
*.jsonl
*.parquet
*.feather
*.arrow

# RadioML dataset files
RML2016.10a_dict.pkl
RML2016.10b_dict.pkl
RML2018.01A_dict.pkl
*.mat
*.hdf5

# Generated visualizations and plots
*.png
*.jpg
*.jpeg
*.pdf
*.svg
*.eps
figures/
plots/
visualizations/
signal_visualizations/

# Jupyter notebook outputs
*.ipynb

# =============================================================================
# SCIENTIFIC COMPUTING
# =============================================================================
# NumPy
*.npy
*.npz

# Matplotlib
.matplotlib/

# =============================================================================
# IDEs AND EDITORS
# =============================================================================
# VSCode
.vscode/
*.code-workspace

# PyCharm
.idea/
*.iml
*.iws
*.ipr

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =============================================================================
# OPERATING SYSTEM
# =============================================================================
# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~

# =============================================================================
# CONFIGURATION AND SECRETS
# =============================================================================
# Environment variables and secrets
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
config.ini
secrets.json
*.key
*.pem

# =============================================================================
# TEMPORARY AND CACHE FILES
# =============================================================================
# Temporary files
*.tmp
*.temp
*.log
*.out
*.err

# Cache directories
.cache/
cache/
tmp/
temp/

# =============================================================================
# PROJECT SPECIFIC EXCLUSIONS
# =============================================================================
# Large files that should be downloaded separately
# (Add instructions in README for obtaining these)

# Example configuration files (keep templates, ignore actual configs)
config_local.py
settings_local.py

# Backup files
*.bak
*.backup
*.old

# Compressed files (if containing large datasets)
*.zip
*.tar.gz
*.rar
*.7z

# =============================================================================
# WHAT TO KEEP IN REPOSITORY
# =============================================================================
# These are the ONLY files you want to track:
# - train_models.py
# - experiment_models.py  
# - visualize_inputs.py
# - README.md
# - requirements.txt
# - .gitignore (this file)
# - LICENSE

# If you need to keep specific files that match patterns above, use:
# !path/to/specific/file.extension